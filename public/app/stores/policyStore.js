// Generated by CoffeeScript 1.10.0
'use strict';
var PolicyStore, policyStore;

PolicyStore = (function() {
  function PolicyStore() {
    console.log('Creating PolicyStore');
    riot.observable(this);
  }

  PolicyStore.prototype.getPolicies = function() {
    var self;
    self = this;
    return $.ajax({
      url: ajaxAPIURL + 'policy',
      method: 'get'
    }).done(function(data, status) {
      console.log('AJAX method successful');
      console.log(data);
      return self.trigger('policyStore_getPolicies_done', data);
    }).fail(function(req, error) {
      console.log('AJAX method failed');
      console.log(error);
      return self.trigger('policyStore_getPolicies_error', req.status);
    });
  };

  PolicyStore.prototype.addPolicy = function(data) {
    var self, urlTo;
    self = this;
    urlTo = ajaxAPIURL + 'policy/' + data.clientId + '/new';
    return $.ajax({
      url: urlTo,
      method: 'put',
      data: data
    }).done(function(data, status) {
      console.log('AJAX method successful');
      console.log(data);
      return self.trigger('policyStore_getPolicies');
    }).fail(function(req, error) {
      console.log('AJAX method failed');
      console.log(error);
      return self.trigger('policyStore_getPolicies_error', req.status);
    });
  };

  PolicyStore.prototype.editPolicy = function(data) {
    var self, urlTo;
    self = this;
    console.log(data);
    urlTo = ajaxAPIURL + 'policy/' + data.clientId + '/edit';
    return $.ajax({
      url: urlTo,
      method: 'put',
      data: data
    }).done(function(data, status) {
      console.log('AJAX method successful');
      console.log(data);
      return self.trigger('policyStore_getPolicies');
    }).fail(function(req, error) {
      console.log('AJAX method failed');
      console.log(error);
      return self.trigger('policyStore_getPolicies_error', req.status);
    });
  };

  return PolicyStore;

})();

policyStore = new PolicyStore;

policyStore.on('policyStore_getPolicies', function() {
  return this.getPolicies();
});

policyStore.on('policyStore_addPolicyToClient', function(policy) {
  return this.addPolicy(policy);
});

policyStore.on('policyStore_editPolicy', function(policy) {
  return this.editPolicy(policy);
});
